/*
  Menu driven control of a sound board over UART.
  Commands for playing by # or by name (full 11-char name)
  Hard reset and List files (when not playing audio)
  Vol + and - (only when not playing audio)
  Pause, unpause, quit playing (when playing audio)
  Current play time, and bytes remaining & total bytes (when playing audio)

  Connect UG to ground to have the sound board boot into UART mode
*/

#include <SoftwareSerial.h>
#include "Adafruit_Soundboard.h"


// Choose any two pins that can be used with SoftwareSerial to RX & TX
#define SFX_TX 5
#define SFX_RX 6

// Connect to the RST pin on the Sound Board
#define SFX_RST 4

// You can also monitor the ACT pin for when audio is playing!

// we'll be using software serial
SoftwareSerial ss = SoftwareSerial(SFX_TX, SFX_RX);

// pass the software serial to Adafruit_soundboard, the second
// argument is the debug port (not used really) and the third
// arg is the reset pin
Adafruit_Soundboard sfx = Adafruit_Soundboard(&ss, NULL, SFX_RST);

// can also try hardware serial with
// Adafruit_Soundboard sfx = Adafruit_Soundboard(&Serial1, NULL, SFX_RST);


//this variable will hold a random number generated by the random() function
long randomNumber;


void setup() {
  Serial.begin(115200);
  Serial.println("Adafruit Sound Board!");

  // softwareserial at 9600 baud
  ss.begin(9600);
  // can also do Serial1.begin(9600)

  if (!sfx.reset()) {
    Serial.println("Not found");
    while (1);
  }
  Serial.println("SFX board found");

  volAdjust();
  
  randomSeed(analogRead(0));

     
}


void loop() {

  randomNumber = random(0,155);  
  Serial.print("The Random Number is = ");
  Serial.println(randomNumber);


  //test playing specific # track
  uint8_t n = randomNumber;  // random track
  Serial.print("\nPlaying track #"); Serial.println(n);
  if (! sfx.playTrack((uint8_t)n) ) {
    Serial.println("Failed to play track?");
  }
    
  delay(2000);

  
}

void volAdjust() {
    int volDown = 20; while( volDown-- ) { 
     uint16_t v;
     v=sfx.volDown();
     Serial.println(v);
    }
}
